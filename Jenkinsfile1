pipeline {
    agent any
    
    tools {
        maven "maven3.9.6"
    }

    stages {
        stage("Git clone") {
            steps {
                git branch: 'main', url: 'https://github.com/Alfred-Obeng-Danquah/web-app.git'
            }
        }

        stage("Build and Test") {
            steps {
                script {
                    // Build
                    sh "mvn clean package"
                    // Test
                    sh "mvn test"
                }
            }
        }

        stage("Package with Maven") {
            steps {
                sh "mvn package"
            }
        }

        stage('SonarQube Analysis') {
            steps {
                // Run SonarQube scanner
                withSonarQubeEnv('sonarqube') {
                    sh "${tool 'sonar5.0'}/bin/sonar-scanner -Dsonar.projectKey=jomacs"
                }
            }
        }
        
        stage("Upload to Nexus") {
            steps {
                nexusArtifactUploader(
                    artifacts: [[artifactId: 'maven-web-application', 
                                  classifier: '', 
                                  file: '/var/lib/jenkins/workspace/first-pipeline-job/target/web-app.war', 
                                  type: 'war']], 
                    credentialsId: 'nexus-id', 
                    groupId: 'com.mt', 
                    nexusUrl: '34.201.164.17:8081',
                    nexusVersion: 'nexus3', 
                    protocol: 'http', 
                    repository: 'webapp-Release', 
                    version: '3.1.2-RELEASE'
                )
            }
        }
        
        stage("Deploy to UAT") {
            steps {
                deploy adapters: [tomcat9(credentialsId: 'tomcat-id', path: '', url: 'http://44.208.21.84:8080/')], contextPath: null, war: 'target/*.war'
            }
        }
    }
    
    post {
        success {
            slackSend channel: '#team-canada', color: 'good', message: "Build successful: ${currentBuild.fullDisplayName}"
        }
        failure {
            slackSend channel: '#team-canada', color: 'danger', message: "Build failed: ${currentBuild.fullDisplayName}"
        }
    }
}



/*
node{
    def MHD = tool name: "maven3.8.4"
    stage('code'){
        git branch: 'development', url: 'https://github.com/team16flight/web-app.git'
    }
    stage('BUILD'){
       sh "${MHD}/bin/mvn clean package"
 
    }
        
    
    stage('deploy'){
  sshagent(['tomcat']) {
  sh "scp -o StrictHostKeyChecking=no target/*war ec2-user@172.31.15.31:/opt/tomcat9/webapps/"
}
}
stage('email'){
emailext body: '''Build is over

JOMACS 
437212483''', recipientProviders: [developers(), requestor()], subject: 'Build', to: 'tdapp@gmail.com'
}
}
 */
